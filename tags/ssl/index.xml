<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Ssl - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/ssl/</link>
        <description>Ssl - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Sun, 16 May 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/ssl/" rel="self" type="application/rss+xml" /><item>
    <title>Nginx配置ssl证书无法访问的问题</title>
    <link>https://www.ithome.me/post/2021/05/16/nginx%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/</link>
    <pubDate>Sun, 16 May 2021 00:00:00 &#43;0000</pubDate>
    <author>Simon</author>
    <guid>https://www.ithome.me/post/2021/05/16/nginx%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[<h2 id="nginx配置了ssl证书但是http能访问https不行">nginx配置了SSL证书，但是http能访问，https不行</h2>
<hr>
<h3 id="检查443端口是否已经开放">检查443端口是否已经开放</h3>
<ul>
<li><i class="far fa-square fa-fw" aria-hidden="true"></i> 腾讯云和阿里云的安全策略组里面放行端口<code>80</code>和<code>443</code></li>
<li><i class="far fa-square fa-fw" aria-hidden="true"></i> 防火墙端口放开。通过SSH登录到服务器(centos为例)
<ul>
<li>centos通过<code>firewall-cmd --list-all</code>查看是否开放了443端口</li>
<li>若没有，运行<code>firewall-cmd --zone=public --add-port=443/tcp --permanent</code></li>
<li><code>systemctl restart firewalld</code>重启防火墙生效</li>
</ul>
</li>
</ul>
<h3 id="检查证书是否配置正确">检查证书是否配置正确</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">    server {
</span></span><span class="line"><span class="cl">        listen 443 ssl;
</span></span><span class="line"><span class="cl">        server_name your domain;
</span></span><span class="line"><span class="cl">        client_max_body_size 1024m;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        ssl_certificate /www/server/nginx/conf/cert/555.pem;
</span></span><span class="line"><span class="cl">        ssl_certificate_key /www/server/nginx/conf/cert/555.key;
</span></span><span class="line"><span class="cl">        ssl_session_timeout 5m;
</span></span><span class="line"><span class="cl">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
</span></span><span class="line"><span class="cl">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
</span></span><span class="line"><span class="cl">        ssl_prefer_server_ciphers on;
</span></span><span class="line"><span class="cl">    }
</span></span></code></pre></div><h2 id="强制http跳转到https提示重定向过多">强制http跳转到https，提示重定向过多</h2>
<hr>
<h3 id="你使用了rewrite并且在一个server里面同时监听了80和443">你使用了<code>rewrite</code>，并且在一个server里面同时监听了<code>80</code>和<code>443</code></h3>
<p>解决方法：<code>80</code>和<code>443</code>分别拆分到不同的<code>server</code>，80里面做301重定向，下面是配置文件，仅供参考。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">   upstream halo {
</span></span><span class="line"><span class="cl">        server 127.0.0.1:8090;
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    server {
</span></span><span class="line"><span class="cl">        listen 80;
</span></span><span class="line"><span class="cl">        return 301 https://yourdomain$request_uri;
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    server {
</span></span><span class="line"><span class="cl">        listen 443 ssl;
</span></span><span class="line"><span class="cl">        server_name yourdomain;
</span></span><span class="line"><span class="cl">        client_max_body_size 1024m;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        #charset koi8-r;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        ssl_certificate /www/server/nginx/conf/cert/xxx.pem;
</span></span><span class="line"><span class="cl">        ssl_certificate_key /www/server/nginx/conf/cert/xxx.key;
</span></span><span class="line"><span class="cl">        ssl_session_timeout 5m;
</span></span><span class="line"><span class="cl">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
</span></span><span class="line"><span class="cl">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
</span></span><span class="line"><span class="cl">        ssl_prefer_server_ciphers on;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        #access_log  logs/host.access.log  main;
</span></span><span class="line"><span class="cl">        location / {
</span></span><span class="line"><span class="cl">            proxy_pass http://halo;
</span></span><span class="line"><span class="cl">            proxy_set_header HOST $host;
</span></span><span class="line"><span class="cl">            proxy_set_header X-Forwarded-Proto $scheme;
</span></span><span class="line"><span class="cl">            proxy_set_header X-Real-IP $remote_addr;
</span></span><span class="line"><span class="cl">            proxy_set_header X-Forwarded-For
</span></span><span class="line"><span class="cl">            $proxy_add_x_forwarded_for;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">        #error_page  404              /404.html;
</span></span><span class="line"><span class="cl">        # redirect server error pages to the static page /50x.html
</span></span><span class="line"><span class="cl">        error_page 500 502 503 504 /50x.html;
</span></span><span class="line"><span class="cl">        location = /50x.html {
</span></span><span class="line"><span class="cl">            root html;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    }
</span></span></code></pre></div>]]></description>
</item>
</channel>
</rss>
