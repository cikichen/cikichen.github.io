<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Kotlin - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/kotlin/</link>
        <description>Kotlin - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Mon, 02 Nov 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/kotlin/" rel="self" type="application/rss+xml" /><item>
    <title>在Android中使用DataBinding(Kotlin)</title>
    <link>https://www.ithome.me/post/2020/11/02/%E5%9C%A8android%E4%B8%AD%E4%BD%BF%E7%94%A8data-binding/</link>
    <pubDate>Mon, 02 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>Simon</author>
    <guid>https://www.ithome.me/post/2020/11/02/%E5%9C%A8android%E4%B8%AD%E4%BD%BF%E7%94%A8data-binding/</guid>
    <description><![CDATA[<blockquote>
<p>本文主要介绍<code>DataBinding</code>在<code>Android App</code>中的使用方法。<em>数据绑定是将“提供器”的数据源与“消费者”绑定并使其同步的一种通用技术。</em></p>
</blockquote>
<h2 id="1-android应用程序使用数据绑定">1. Android应用程序使用数据绑定</h2>
<h3 id="11-介绍databinding">1.1 介绍<code>DataBinding</code></h3>
<p><code>Android</code>通过<code>DataBinding</code>提供了编写声明型布局的支持。这样可以最大程度简化<em>布局</em>和<em>逻辑</em>相关联的代码。</p>
<p>数据绑定要求修改文件，外层需要包裹一个<code>layout</code>布局。主要通过<code>@{}</code> 或 <code>@={}</code>语法把布局中的元素和表达式的引用写入到属性中。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;layout</span> <span class="na">xmlns:android=</span><span class="s">&#34;http://schemas.android.com/apk/res/android&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="na">xmlns:app=</span><span class="s">&#34;http://schemas.android.com/apk/res-auto&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="na">xmlns:tools=</span><span class="s">&#34;http://schemas.android.com/tools&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;data&gt;</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;variable</span>
</span></span><span class="line"><span class="cl">            <span class="na">name=</span><span class="s">&#34;mainModel&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">type=</span><span class="s">&#34;me.ithome.jetpack.model.MainViewModel&#34;</span> <span class="nt">/&gt;</span>①
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/data&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;androidx.constraintlayout.widget.ConstraintLayout</span>
</span></span><span class="line"><span class="cl">        <span class="na">android:layout_width=</span><span class="s">&#34;match_parent&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="na">android:layout_height=</span><span class="s">&#34;match_parent&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="na">tools:context=</span><span class="s">&#34;.MainActivity&#34;</span><span class="nt">&gt;</span>②
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;TextView</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:id=</span><span class="s">&#34;@+id/tv_userinfo&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:layout_width=</span><span class="s">&#34;wrap_content&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:layout_height=</span><span class="s">&#34;wrap_content&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:text=</span><span class="s">&#34;@{mainModel.userData.toString()}&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintBottom_toBottomOf=</span><span class="s">&#34;parent&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintLeft_toLeftOf=</span><span class="s">&#34;parent&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintRight_toRightOf=</span><span class="s">&#34;parent&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintTop_toTopOf=</span><span class="s">&#34;parent&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nt">&lt;Button</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:id=</span><span class="s">&#34;@+id/button&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:layout_width=</span><span class="s">&#34;wrap_content&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:layout_height=</span><span class="s">&#34;wrap_content&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:layout_marginTop=</span><span class="s">&#34;56dp&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:onClick=</span><span class="s">&#34;@{(view) -&gt; mainModel.getClick(view)}&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">android:text=</span><span class="s">&#34;@string/btn_getUserInfo&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintBottom_toTopOf=</span><span class="s">&#34;@+id/tv_userinfo&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintEnd_toEndOf=</span><span class="s">&#34;parent&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintHorizontal_bias=</span><span class="s">&#34;0.498&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintStart_toStartOf=</span><span class="s">&#34;parent&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="na">app:layout_constraintTop_toTopOf=</span><span class="s">&#34;parent&#34;</span> <span class="nt">/&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nt">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nt">&lt;/layout&gt;</span>
</span></span></code></pre></div><p>①用户变量，定义了能在这个布局里面使用的属性和类 <br>
②常规布局</p>
<p><code>DataBinding</code>会基于<code>layout</code>创建一个<code>Binding class</code>，这个类包含了布局属性(定义的变量)到相关视图的所有绑定，并且会为布局中的数据元素生成<code>setter</code>，生成的类的名称是基于<code>layout</code>的名称(驼峰命名，加上<code>Binding</code>后缀)。比如布局名是<code>activity_main.xml</code>，生成的类就是<code>ActivityMainBinding</code>。你能通过这个类去<code>inflate</code>布局和数据模型，也可以通过<code>DataBindingUtil</code>类。</p>
<ol>
<li><code>DataBindingUtils</code>加载布局</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kt" data-lang="kt"><span class="line"><span class="cl"><span class="k">val</span> <span class="py">mainBindingUtil</span> <span class="p">=</span> <span class="nc">DataBindingUtil</span><span class="p">.</span><span class="n">setContentView</span><span class="p">&lt;</span><span class="n">ActivityMainBinding</span><span class="p">&gt;(</span><span class="k">this</span><span class="p">,</span> <span class="nc">R</span><span class="p">.</span><span class="n">layout</span><span class="p">.</span><span class="n">activity_main</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">mainBindingUtil</span><span class="p">.</span><span class="n">lifecycleOwner</span> <span class="p">=</span> <span class="k">this</span>
</span></span></code></pre></div><ol start="2">
<li><code>inflate</code>加载布局(此方法也能用于<code>RecyclerView</code>, <code>ViewPager</code>)</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-kt" data-lang="kt"><span class="line"><span class="cl"><span class="k">val</span> <span class="py">mainBindingUtil</span> <span class="p">=</span> <span class="nc">ActivityMainBinding</span><span class="p">.</span><span class="n">inflate</span><span class="p">(</span><span class="n">layoutInflater</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">setContentView</span><span class="p">(</span><span class="n">mainBindingUtil</span><span class="p">.</span><span class="n">root</span><span class="p">)</span>
</span></span></code></pre></div><p>上述两种方法大家二选一，一般在<code>Activity</code>中我们都用第一种。</p>
<h3 id="12-如何启用databinding">1.2 如何启用<code>DataBinding</code></h3>
<p>想要在<code>Android App</code>工程中使用<code>databinding</code>，只需要在<code>app/build.gradle</code>文件中设置如下代码：</p>]]></description>
</item>
</channel>
</rss>
