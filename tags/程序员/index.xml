<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>程序员 - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/</link>
        <description>程序员 - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Fri, 17 Dec 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/" rel="self" type="application/rss+xml" /><item>
    <title>手摸手极简docker部署rocketmq单机实战</title>
    <link>https://www.ithome.me/post/2021/12/17/docker%E9%83%A8%E7%BD%B2rocketmq%E5%8D%95%E6%9C%BA%E5%AE%9E%E6%88%98/</link>
    <pubDate>Fri, 17 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>Simon</author>
    <guid>https://www.ithome.me/post/2021/12/17/docker%E9%83%A8%E7%BD%B2rocketmq%E5%8D%95%E6%9C%BA%E5%AE%9E%E6%88%98/</guid>
    <description><![CDATA[<p>自己本地搭建rocketmq开发环境还是用docker方便点，之前搭建一直有些小问题，最近专项解决了下，终于搞定了，这里整理分享下</p>
<h3 id="环境准备">环境准备</h3>
<blockquote>
<p>因笔者用的MacBook，所以会主要以Mac为主讲解，其他环境区别不大</p>
</blockquote>
<p>首先请准备好docker环境，推荐<a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener noreffer">docker desktop</a>
，无他，点点点就完事了，不用的时候不启动，开发机紧张的内存问题得到了心理上的安慰。</p>
<p>还需要安装好<code>docker-compose</code>，请自行参考安装教程<a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener noreffer">点这里</a>
</p>
<blockquote>
<p>注：<code>docker desktop</code>自带了docker-compose，所以不需要再单独安装compose了</p>
</blockquote>
<h3 id="编译rocketmq镜像">编译rocketmq镜像</h3>
<p>环境搞定了，我们开始搭建rocketmq，直接用官方推荐的docker镜像即可。
镜像下载地址：<a href="https://github.com/apache/rocketmq-docker" target="_blank" rel="noopener noreffer">https://github.com/apache/rocketmq-docker</a>
</p>
<p>我们先通过<code>git</code>把代码拉下来，打开命令行复制粘贴</p>
<p><code>git clone https://hub.fastgit.org/apache/rocketmq-docker.git</code></p>
<p>clone完成后，继续<code>cd rocketmq-docker/image-build</code>到image-build目录下</p>
<p>目前最新版本为<code>4.9.2</code>,我们就以这个版本为例：
继续输入下列指令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">sh build-image.sh 4.9.2 alpine
</span></span></code></pre></div><p>等待完成就即可，如果报错，请自行根据错误查找原因。只要环境没问题，编译完成后我们能得到<code>apacherocketmq/rocketmq</code>镜像</p>
<p>至此，我们已经完成了一半的工作。</p>
<h3 id="编写docker-compose配置">编写docker-compose配置</h3>
<blockquote>
<p>鲁迅：授人以鱼不如授人以渔和鱼
有经验的同学此时已经急不可耐了，鱼拿去。
完整的<code>docker-compose.yml</code>文件</p>]]></description>
</item>
<item>
    <title>程序员也配吃10元的饭盒?</title>
    <link>https://www.ithome.me/post/2015/08/03/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B9%9F%E9%85%8D%E5%90%8310%E5%85%83%E7%9A%84%E9%A5%AD%E7%9B%92/</link>
    <pubDate>Mon, 03 Aug 2015 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2015/08/03/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B9%9F%E9%85%8D%E5%90%8310%E5%85%83%E7%9A%84%E9%A5%AD%E7%9B%92/</guid>
    <description><![CDATA[<blockquote>
<p>文章来自网络，版权归原作者所有。<br>
看一次笑一次系列</p>
</blockquote>
<p>又是一个阳光灿烂的中午，看了一上午的报纸，茶水也顺带喝了不少，肚子早已经咕咕作响了，今天中午吃点什么呢，貌似楼下的新开张的<strong>盒饭</strong>还不错，于是我来到楼下准备买上一盒。</p>
<p>菜色还不错，价格有6元，8元，10元，12元，20元的，像哥这样的精英管理人才，怎么着也的吃最高级的才配合身份，就在我准备购买时，一个响亮的声音响起，</p>
<p><strong>&ldquo;老板，给我一份10元的盒饭&rdquo;，</strong></p>
<p>顺势撇了一眼，一个小伙子，眉开眼笑的靠近盒饭铺，今天是1号，看样子是发工资了。就当他走近时，看到了我，刚才的欢愉的表情瞬时黯淡下去，他知道我认出了他，靠，满头白里带一点黑的头发，永远没睡醒的眼神，以及那凌乱的胡渣子，都出卖了他的身份。我继续狠狠的盯着他，他越发的羞愧了，我犀利的眼神正在和他做着底层通信，我默默的向他传达一个信息，</p>
<p><strong>&ldquo;你，也配吃10元的盒饭?&rdquo;.</strong></p>]]></description>
</item>
<item>
    <title>[转载]未雨绸缪：程序员保值的5个秘密</title>
    <link>https://www.ithome.me/post/2015/07/31/%E8%BD%AC%E8%BD%BD-%E6%9C%AA%E9%9B%A8%E7%BB%B8%E7%BC%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%9D%E5%80%BC%E7%9A%845%E4%B8%AA%E7%A7%98%E5%AF%86/</link>
    <pubDate>Fri, 31 Jul 2015 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2015/07/31/%E8%BD%AC%E8%BD%BD-%E6%9C%AA%E9%9B%A8%E7%BB%B8%E7%BC%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%9D%E5%80%BC%E7%9A%845%E4%B8%AA%E7%A7%98%E5%AF%86/</guid>
    <description><![CDATA[<p>在国内，很多人说程序员是吃青春饭的，一开始说过了30岁就得转行，后来又有人35岁是一道坎……看起来好像程序员真的和风尘女子一样，注定有朝一日会年老色衰不再受人青睐。</p>
<p>No！我要说，不是这样的！</p>
<blockquote>
<p>所有的道路都通向天堂<br>
只是要度过路上的痛苦时光<br>
那一天我正走在路上<br>
两边的荒草，比人还高<br>
    —海子，《月全食》</p>
</blockquote>
<p>真的程序员，敢于直面惨淡的人生和淋漓的鲜血，一定能够在荒草满布的岁月荒原里踏出一条自己的路来。</p>
<p>其实别人说的话，听一听就算了，决定还得自己来做。面对别人的怀疑、否定、讥讽，我们只需要坚定地前行，做给他看。行动是最好的证明，多坚持一秒，未来就会不同。</p>
<p>现在就实打实的来看看程序员的价值之路在何方。</p>]]></description>
</item>
<item>
    <title>如何成为一名伟大的程序员</title>
    <link>https://www.ithome.me/post/2013/03/19/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E4%BC%9F%E5%A4%A7%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98/</link>
    <pubDate>Tue, 19 Mar 2013 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2013/03/19/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E4%BC%9F%E5%A4%A7%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98/</guid>
    <description><![CDATA[<p>一个优秀开发者如何才能变得伟大？</p>
<p>还是先不想如何变得伟大：一个不错的开发者如何变成一个优秀的开发者？</p>
<p>从第一步到第N步并没有确定的路径，哎呀，甚至不知道第N步是什么. 能逻辑思考的都明白，缺乏一个确定的路线意味着，想从新手到大师，将会是一个艰辛的旅程。在过去几年间，我还是花了相当一些时间，反复思考这一个难题。接下来是什么？我该如何做才能从一个优秀的开发者成为一个相当优秀的开发者？</p>
<p><strong>成功到底是什么样子的？</strong></p>
<p>当我有一个清晰的目标以及一个可以衡量的成功标准的时候，我做的最好。比如，我想5分钟跑一英里，这很好衡量，而且成功是明确定义了的。我知道现在我一英里我可以跑多快，而且网上到处都是如何跑快的建议和训练项目。我可以选择一种训练项目，努力训练，我非常自信最后能够达到我所期待的目标。而且这个非常容易被衡量，每一周我都可以知道我距离自己的终极目标还有多少.</p>
<p>但是，你如何去衡量自己是否达到了一个“相当优秀的开发者”这样一个级别呢？简单得讲，你不能够。这个目标，如上所述，非常的主观，非常的宽泛，简直是无法衡量的。所以，我们该如何定义一个可以衡量的东西？</p>
<p>和想5分钟跑一英里差不多，我们可以从对比现在作为程序员的自己和所期望能成为的程序员来入手。五分钟一英里的赛跑者有而十分钟一英里的赛跑者缺乏的经历是什么？让大师级程序员获益而新手程序员缺乏的经历是什么？这里关键的是经历。</p>
<p>我们都曾有过某种特定的经历提升了我们作为程序员的技能。我们曾学习过一种新的语言，而让我们有一种新的思维方式。或者，我们都曾精雕细琢过完美的设计，只是为了观察其在苛刻的现实环境下暴露出的缺陷. 我们因此变成更好的程序员。所以，有些经历给了你新的技术。而有些则是不同的模式，并且能够让你理解为什么会这样。正是这些经历在教你，影响你的思维过程，，影响你解决问题的方法，改进你的设计。方便的是，你是否有过某种特定的经历是很容易被衡量的。（如果把这些经历想成是成就就很有意思啦。）</p>
<p>虽然花了些时间，但是我已经对我那不可衡量悬而未绝的目标，达到“相当优秀的开发者”的级别，感到不烦恼了。如果一个开发者能够以他的经历来区分，也许我们已经有了一个明确定义的路径朝向“相当优秀的开发者”这么一个大方向了。我揣测这么一条路径，应该是这样子的：</p>
<p>1、标志着从一个普通人成长成程序员的经历</p>
<p>2、选择某种经历去追求</p>
<p>3、追去的经历完成了。（成就解锁了！）</p>
<p>4、经历的反思，深入的思考。[A]</p>
<p>5、返回第2步，这次是选择一个新的经历。</p>
<p>如何以一种更好方式开始第一步，而不是众包给各位。这里我给出了一部分编程的成就，松散的分了组。[B]我会在文末为你提供多种方式，让你来创造你自己的想法。</p>
<p><strong>成就</strong></p>
<p>学习多种编程范式：</p>
<p>用汇编语言写一个程序</p>
<p>用函数式编程语言写一个应用</p>
<p>用面向对象语言写一个应用</p>
<p>用基于原型的语言写一个应用</p>
<p>用逻辑编程语言写一个应用</p>
<p>用Actor模型写一个应用</p>
<p>用Forth语言写一个应用[C]</p>
<p>体验不同平台上编程的来龙去脉：</p>
<p>写过一个普通的Web应用</p>
<p>写过一个普通的桌面应用</p>
<p>写过一个普通的手机应用</p>
<p>写过一个普通的嵌入式应用</p>
<p>写过一个实时系统</p>
<p>增强你对开发人员所常用的模块的理解：</p>
<p>写过一个网络客户端(HTTP, FTP等)</p>
<p>写过一个设备驱动</p>
<p>写过一个B-tree数据库</p>]]></description>
</item>
</channel>
</rss>
