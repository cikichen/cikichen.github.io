<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>OnMeasure - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/onmeasure/</link>
        <description>OnMeasure - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Thu, 16 Jan 2014 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/onmeasure/" rel="self" type="application/rss+xml" /><item>
    <title>[转]Android的onMeasure和onLayout And MeasureSpec揭秘</title>
    <link>https://www.ithome.me/post/2014/01/16/%E8%BD%ACandroid%E7%9A%84onmeasure%E5%92%8Conlayout-and-measurespec%E6%8F%AD%E7%A7%98/</link>
    <pubDate>Thu, 16 Jan 2014 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2014/01/16/%E8%BD%ACandroid%E7%9A%84onmeasure%E5%92%8Conlayout-and-measurespec%E6%8F%AD%E7%A7%98/</guid>
    <description><![CDATA[<p>Android中自定义ViewGroup最重要的就是onMeasure和onLayout方法，都需要重写这两个方法，ViewGroup绘制 的过程是这样的：</p>
<blockquote>
<p>onMeasure → onLayout → DispatchDraw</p>
</blockquote>
<p>其实我觉得官方文档解释有大大的问题，刚开始一直很疑惑onMeasure和onLayout是什么意思，看了很多资料后豁然开朗，总结如下</p>
<p>首先要知道ViewGroup是继承View的，后面的解释跟View有关。ViewGourp可以包含很多个View，View就是它的孩子，比如LinearLayout布局是一个ViewGroup，在布局内可以放TextEdit、ImageView等等常用的控件，这些叫子View，当然不限于这个固定的控件。</p>
<p>onMeasure → onLayout → DispatchDraw：onMeasure负责测量这个ViewGroup和子View的大小，onLayout负责设置子View的布局，DispatchDraw就是真正画上去了。</p>
<p><strong>onMeasure</strong></p>
<p>官方解释：</p>
<blockquote>
<p>protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec)</p>
</blockquote>
<p>Measure the view and its content to determine the measured width and the measured height. 即 测量View和它的内容决定宽度和高度。</p>
<p>说实在的，官方文档说测量我刚开始很疑惑，onMeasure翻译过来是测量，根本不知道它的意图，其实它有两方面作用：①获得ViewGroup和子View的宽和高 ②设置子ViewGroup的宽和高，注意，只是宽和高。其实，追踪onMeasure方法会发现，它继承自View。<br>
典型的onMeasure的一个实现</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Override</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">protected</span><span class="w"> </span><span class="kt">void</span><span class="w"> </span><span class="nf">onMeasure</span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">widthMeasureSpec</span><span class="p">,</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="n">heightMeasureSpec</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kt">int</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">MeasureSpec</span><span class="p">.</span><span class="na">getSize</span><span class="p">(</span><span class="n">widthMeasureSpec</span><span class="p">);</span><span class="w">   </span><span class="c1">//获取ViewGroup宽度  </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kt">int</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">MeasureSpec</span><span class="p">.</span><span class="na">getSize</span><span class="p">(</span><span class="n">heightMeasureSpec</span><span class="p">);</span><span class="w">  </span><span class="c1">//获取ViewGroup高度  </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">setMeasuredDimension</span><span class="p">(</span><span class="n">width</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="p">);</span><span class="w">    </span><span class="c1">//设置ViewGroup的宽高  </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kt">int</span><span class="w"> </span><span class="n">childCount</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getChildCount</span><span class="p">();</span><span class="w">   </span><span class="c1">//获得子View的个数，下面遍历这些子View设置宽高  </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="kt">int</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">0</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="w"> </span><span class="n">childCount</span><span class="p">;</span><span class="w"> </span><span class="n">i</span><span class="o">++</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">View</span><span class="w"> </span><span class="n">child</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getChildAt</span><span class="p">(</span><span class="n">i</span><span class="p">);</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">child</span><span class="p">.</span><span class="na">measure</span><span class="p">(</span><span class="n">viewWidth</span><span class="p">,</span><span class="w"> </span><span class="n">viewHeight</span><span class="p">);</span><span class="w">  </span><span class="c1">//设置子View宽高  </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"> </span><span class="p">}</span><span class="w">
</span></span></span></code></pr]]></description>
</item>
</channel>
</rss>
