<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>切图 - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/%E5%88%87%E5%9B%BE/</link>
        <description>切图 - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Tue, 10 Dec 2013 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/%E5%88%87%E5%9B%BE/" rel="self" type="application/rss+xml" /><item>
    <title>[转]Android切图小贴士</title>
    <link>https://www.ithome.me/post/2013/12/10/%E8%BD%ACandroid%E5%88%87%E5%9B%BE%E5%B0%8F%E8%B4%B4%E5%A3%AB/</link>
    <pubDate>Tue, 10 Dec 2013 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2013/12/10/%E8%BD%ACandroid%E5%88%87%E5%9B%BE%E5%B0%8F%E8%B4%B4%E5%A3%AB/</guid>
    <description><![CDATA[<p>用户手中看到的产品界面，并非设计师呕心沥血创作的效果图，而是一个个单独的切图经由开发同学技术实现。切图作为设计师与开发者之间的桥梁，它的作用很关键，合适的切图、精准的位置可以最大限度的还原效果图的设计，精妙的切图更会有事半功倍的效果哦！</p>
<p>我们经常会做一个俗称“点九”的切图，什么是“点九”呢？“点九”是Android平台处理图片的一种特殊的形式，由于文件的扩展名为：“.9.png”，所以被称为“点九”。“点九”也是由于Android平台多种分辨率需适配的需求下，发展出来的一种独特的技术。它可以将图片横向和纵向随意进行拉伸，而保留像素精细度、渐变质感和圆角的原大小，实现多分辨率下的完美显示效果，同时减少不必要的图片资源，可谓切图利器。</p>
<p>“点九”的制作工具为“draw9patch”，具体制作步骤这里不多讲了，插播小贴士第一条：舍弃这个制作工具吧，减少繁琐的步骤，不要再每张图片都拖到工具里画啦！直接用ps＋铅笔就可以画哦。</p>
<p>“点九”的学问当然很大，但Android切图不仅需要清楚“点九”的方法，还有其他各种小技巧。下面为大家分享我在工作中总结的几个关于切图的心得。</p>
<h2 id="一站在开发的角度来切图">(一)站在开发的角度来切图</h2>
<p>了解技术实现方式，就像了解一位开发同学，更多的了解，会让工作更加顺畅。
如为下图按钮做“点九”图，一部分同学可能会这样做：
</p>
<p>这是一张高度不变左右拉伸的“点九”图片，内容显示区域为整个按钮范围。按钮效果图上看，文字是垂直居中显示的，开发同学拿到这张“点九”图片，就会在代码里写上center的属性，此属性就是设定让文字在按钮的垂直居中位置。说到这，有没有察觉出问题呢？先让我们看一下实现出来的效果怎么样。
</p>
<p>拥有像素眼的设计师们，立刻会察觉文字偏下了。然后找开发同学调整文字的位置，“把文字向上n个像素吧，没有居中”等等，这是很经常发生的对话，开发同学会增加代码微调文字的位置以达到效果图效果。事情圆满解决了吗？不然。其实是我们错了。</p>
<p>当我们了解开发同学实现方法后，我们可以试试用逆推法验证这张“点九”图片是否还有进一步精确的可能。</p>
<p>
如上图，设计效果图中红色区域是文字排版区域，是理想化的位置，1和2的高度是相等的；而实现效果图中3和4的高度是相等的。问题出现了！在我们画点九的时候，把投影的高度也画进去了，所以视觉上文字就偏下了。</p>
<p>我们通常的画法应该是：</p>
<h3 id="1-在高度不拉伸的情况下在空白区域点一像素的点"><strong>1. 在高度不拉伸的情况下，在空白区域点一像素的点。</strong></h3>
<p>这是与开发同学之间约定俗成的习惯，凭着默契就知道此按钮高度不进行拉伸，而且就是被拉伸了，拉伸的是空白区域，视觉上也不会造成影响。</p>
<p>对比如图所示：
</p>
<h3 id="2-内容显示区域的高度要避开投影区域这样可以保证文字视觉的居中"><strong>2. 内容显示区域的高度要避开投影区域，这样可以保证文字视觉的居中。</strong></h3>
<p>“点九”图片的内容显示区域，我喜欢称为内容排版区域。在切图的过程中，还会发现不同的情景，要时刻想着你要的结果，通过对此区域的仔细处理，可以更好的为图片上所承载的内容做排版。这样开发同学只要通过一些简单的属性设定，就可以实现效果图上精确的布局。同时减少不必要的开发，精简代码，提高产品的性能，积少成多，带给用户更好的体验感受。</p>
<h2 id="二选择更优的切图方式">(二)选择更优的切图方式</h2>
<p>当我们遇到异形或较为复杂的切图时，往往需要抛开固有的思维程式，去找到更适合的切图方式。举例如为下图浮层切图的时候，我们还可以用我们的利器“点九”么？
</p>]]></description>
</item>
</channel>
</rss>
