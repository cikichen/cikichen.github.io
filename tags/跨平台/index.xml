<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>跨平台 - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0/</link>
        <description>跨平台 - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Thu, 31 Dec 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0/" rel="self" type="application/rss+xml" /><item>
    <title>MacBook M1开发Flutter遇到的问题</title>
    <link>https://www.ithome.me/post/2020/12/31/macbook-m1%E5%BC%80%E5%8F%91flutter%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 31 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>Simon</author>
    <guid>https://www.ithome.me/post/2020/12/31/macbook-m1%E5%BC%80%E5%8F%91flutter%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[<h3 id="前言">前言</h3>
<p>前一台MacBook已经战了6年，去年准备换16寸，因为各种原因一直等到了今年，又因为得知ARM架构的MacBook要上了，等等党永不为奴，终于等到了它。</p>
<p>我买的是MacBook Pro M1 16+512的配置，用了几天觉得等M2才是真香，M1离真香还差点意思，尤其是系统bug，太致命，开发工具目前原生适配的也不多，用起来提升没那么明显。</p>
<h3 id="搭建flutter环境">搭建flutter环境</h3>
<p>这个不细说，官网已经很详细了：https://flutterchina.club/setup-macos/</p>
<h3 id="m1开发flutter靠谱吗">M1开发Flutter靠谱吗？</h3>
<p>整体还行，但是目前来说，因为适配的问题，想模拟器运行都要调试一番，iPhone和Android都是。不过<strong>M1可以直接把自己的<code>udid</code>注册到开发者账号中去，原生直接运行iPhone App</strong>，这个确实骚，但是为什么我的MacBook注册后设备类型是<code>ipod</code>?
</p>]]></description>
</item>
<item>
    <title>Flutter、JetPack Compose和SwiftUI对比</title>
    <link>https://www.ithome.me/post/2020/11/04/flutterjetpack-composeswiftui%E5%AF%B9%E6%AF%94/</link>
    <pubDate>Wed, 04 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>Simon</author>
    <guid>https://www.ithome.me/post/2020/11/04/flutterjetpack-composeswiftui%E5%AF%B9%E6%AF%94/</guid>
    <description><![CDATA[<p>从目前技术的发展来看，通过声明式API来构建UI将会成为主流。</p>
<table>
  <thead>
      <tr>
          <th style="text-align: left">框架</th>
          <th style="text-align: left">Flutter</th>
          <th style="text-align: left">JetPack Compose</th>
          <th style="text-align: left">SwiftUI</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td style="text-align: left">支持平台</td>
          <td style="text-align: left">Android、iOS、Web、Desktop</td>
          <td style="text-align: left">Android</td>
          <td style="text-align: left">iOS、MacOS、iPadOS</td>
      </tr>
      <tr>
          <td style="text-align: left">开发语言</td>
          <td style="text-align: left">dart</td>
          <td style="text-align: left">kotlin</td>
          <td style="text-align: left">swift</td>
      </tr>
      <tr>
          <td style="text-align: left">性能</td>
          <td style="text-align: left">好</td>
          <td style="text-align: left">优</td>
          <td style="text-align: left">优</td>
      </tr>
      <tr>
          <td style="text-align: left">优点</td>
          <td style="text-align: left">跨平台</td>
          <td style="text-align: left">原生，简化UI构建</td>
          <td style="text-align: left">原生，简化UI构建</td>
      </tr>
      <tr>
          <td style="text-align: left">缺点</td>
          <td style="text-align: left">性能相比原生稍差，跨多平台目前还不完善，UI嵌套深</td>
          <td style="text-align: left">不支持跨平台，Android的UI构建包</td>
          <td style="text-align: left">仅支持Apple自家的跨平台，iOS的UI构建包，缺乏竞争力</td>
      </tr>
  </tbody>
</table>
<h3 id="1-如何选择">1. 如何选择？</h3>
<p>这问题是个悖论，因为这三个东西完全不一样，面向的场景和未来也不一样。</p>]]></description>
</item>
<item>
    <title>flutter开发系列之二--第一个应用</title>
    <link>https://www.ithome.me/post/2018/07/18/flutter%E5%BC%80%E5%8F%91%E4%B9%8B%E4%BA%8C-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8/</link>
    <pubDate>Wed, 18 Jul 2018 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2018/07/18/flutter%E5%BC%80%E5%8F%91%E4%B9%8B%E4%BA%8C-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8/</guid>
    <description><![CDATA[<p>好了，我们已经配置好环境变量。现在开始我们的第一个Flutter应用。</p>
<p>Flutter项目可以通过命令行创建，也可以用IDE创建。</p>
<h3 id="1-命令行方式创建flutter项目">1. 命令行方式创建Flutter项目</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">flutter create myapp
</span></span><span class="line"><span class="cl">cd myapp
</span></span></code></pre></div><p>也可以指定pkg/bundleid</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">flutter create --org com.example --template=app myapp
</span></span><span class="line"><span class="cl">cd myapp
</span></span></code></pre></div><p>然后，如果当前有模拟器运行，直接<code>flutter run</code>，否者安装下面的命令运行</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">flutter emulators //列出可用的模拟器
</span></span><span class="line"><span class="cl">flutter emulators --launch &lt;emulator id&gt; //启动模拟器 emulator id=&gt;apple_ios_simulator
</span></span></code></pre></div><p>命令行方式就介绍这些了，有兴趣的请自行参考https://flutter.io/developing-packages/</p>
<h3 id="2-android-studio">2. Android Studio</h3>
<p>好了，重点来了，这也是我所推荐的方式，通过AS来开发一个Flutter应用。</p>]]></description>
</item>
<item>
    <title>flutter开发系列之一--环境配置</title>
    <link>https://www.ithome.me/post/2018/07/16/flutter%E5%BC%80%E5%8F%91-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Mon, 16 Jul 2018 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2018/07/16/flutter%E5%BC%80%E5%8F%91-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
    <description><![CDATA[<p>flutter出来已经一段时间，相信有不少开发同学都去尝试了，现在跨平台开发技术火爆移动开发圈，比如RN，Weex等等，但是这些方案如果不是有特殊需求，一般并没有动力去学，flutter不同，google大厂出品，值得信赖。这系列文章主要是用来记录自己学习flutter的一些经验和遇到的问题。</p>
<h3 id="1-准备">1. 准备</h3>
<blockquote>
<p>因我使用的开发环境是Mac系统，因此本系列所有的配置都是Mac为主
由于网络问题，部分用户可能无法打开flutter官网，这里推荐<a href="https://flutter-io.cn/" target="_blank" rel="noopener noreffer">Flutter中文站</a>
</p>
</blockquote>
<p><strong>在开始flutter之前，请先安装好Xcode和Android Studio</strong></p>
<h3 id="2-安装xcode和android-studio">2. 安装Xcode和Android Studio</h3>
<h4 id="21-xcode">2.1 Xcode</h4>
<blockquote>
<p>直接在Mac App Store下载安装Xcode。</p>
</blockquote>
<p>安装完Xcode后还需要安装一些依赖库。而这些库需要通过brew安装。</p>
<ol>
<li>首先安装brew(已经安装过的跳过此步骤)</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">/usr/bin/ruby -e &#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&#34;
</span></span></code></pre></div><ol start="2">
<li>安装一些依赖库</li>
</ol>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">brew update
</span></span><span class="line"><span class="cl">brew install --HEAD libimobiledevice
</span></span><span class="line"><span class="cl">brew install ideviceinstaller ios-deploy cocoapods
</span></span><span class="line"><span class="cl">pod setup
</span></span></code></pr]]></description>
</item>
</channel>
</rss>
