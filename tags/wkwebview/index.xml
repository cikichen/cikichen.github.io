<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>WKWebView - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/wkwebview/</link>
        <description>WKWebView - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Wed, 13 Feb 2019 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/wkwebview/" rel="self" type="application/rss+xml" /><item>
    <title>WKWebView 那些坑</title>
    <link>https://www.ithome.me/post/2019/02/13/wkwebview-%E9%82%A3%E4%BA%9B%E5%9D%91/</link>
    <pubDate>Wed, 13 Feb 2019 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2019/02/13/wkwebview-%E9%82%A3%E4%BA%9B%E5%9D%91/</guid>
    <description><![CDATA[<blockquote>
<p>本文出处“腾讯Bugly(<a href="http://bugly.qq.com" target="_blank" rel="noopener noreffer">http://bugly.qq.com</a>
),作者林泽水”</p>
</blockquote>
<h3 id="导语">导语</h3>
<p>WKWebView 是苹果在 WWDC 2014 上推出的新一代 webView 组件，用以替代 UIKit 中笨重难用、内存泄漏的 UIWebView。WKWebView 拥有60fps滚动刷新率、和 safari 相同的 JavaScript 引擎等优势。</p>
<p>简单的适配方法本文不再赘述，主要来说说适配 WKWebView 过程中填过的坑以及善待解决的技术难题。</p>
<h3 id="1wkwebview-白屏问题">1、WKWebView 白屏问题</h3>
<p>WKWebView 自诩拥有更快的加载速度，更低的内存占用，但实际上 WKWebView 是一个多进程组件，Network Loading 以及 UI Rendering 在其它进程中执行。初次适配 WKWebView 的时候，我们也惊讶于打开 WKWebView 后，App 进程内存消耗反而大幅下降，但是仔细观察会发现，Other Process 的内存占用会增加。在一些用 webGL 渲染的复杂页面，使用 WKWebView 总体的内存占用（App Process Memory + Other Process Memory）不见得比 UIWebView 少很多。</p>
<p>在 UIWebView 上当内存占用太大的时候，App Process 会 crash；而在 WKWebView 上当总体的内存占用比较大的时候，WebContent Process 会 crash，从而出现白屏现象。在 WKWebView 中加载下面的测试链接可以稳定重现白屏现象:</p>]]></description>
</item>
</channel>
</rss>
