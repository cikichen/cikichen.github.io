<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Web - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/web/</link>
        <description>Web - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Thu, 14 Feb 2019 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/web/" rel="self" type="application/rss+xml" /><item>
    <title>[ WWDC2018 ] - Web安全策略 Strategies for Securing Web Content</title>
    <link>https://www.ithome.me/post/2019/02/14/wwdc2018-web%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5-strategies-for-securing-web-content/</link>
    <pubDate>Thu, 14 Feb 2019 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2019/02/14/wwdc2018-web%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5-strategies-for-securing-web-content/</guid>
    <description><![CDATA[<h2 id="web安全策略">web安全策略</h2>
<p>web安全对iOS开发者来说重要吗？重要！APP中通常会使用很多web页面，例如广告、登录流程、闪屏，或者需要使用跨平台功能的时候。你可能在页面中仅仅一部分使用web，也可以整个页面都是webView,甚至做一个web app。因此web安全对于app来说非常重要。</p>
<p>来自web的安全攻击有以下几种：</p>
<ul>
<li>跨域攻击</li>
<li>预测执行攻击</li>
<li>窗口控制攻击</li>
</ul>
<p>本文将针对这三种攻击类型，给出安全防御措施。</p>
<h3 id="安全传输">安全传输</h3>
<p>网络传输相信大家都很熟悉了，安全的传输能够保证接收到的数据来自可信任的站点，并且在传输工程中不会被篡改。安全传输是其它安全措施的基础，采取的措施包括：</p>
<ul>
<li>HTTPS和WSS（webSocket Secure）</li>
<li>Http Strict Transport Security（HSTS）遵循HTTPS安全协议的web只能访问同样遵循HTTPS安全协议的内容，不能访问遵循HTTP不安全协议的内容。</li>
<li>Upgrade-Insecure-Requests 请求头中添加这一项表示web支持更加安全的升级机制，服务器可以重定向到这个站点的安全版本。</li>
<li>使用cookie确保安全，cookie只能被安全的传输，例如千万不要把cookie放到粘贴板上</li>
<li>在app的info.plist文件中

<strong>Allow Arbitrary Loads in Web Content 这个开关一定要置为 NO！</strong></li>
</ul>
<h2 id="跨域封锁">跨域封锁</h2>
<p>web的内容可以来自任何站点，例如，webView上的一张图片可以来自任何服务器，也可以从任意服务器上加载一个脚本或iframe。需要注意的是要当心来自其它服务器的资源。跨域的保护已经有20多年的历史，并且形成了基本原则&ndash;同源策略：只有和页面来源相同的脚本才会被该页面执行。例如iframe来自不同的域名，同源策略不允许加载这个iframe。仅仅靠同源策略还是不够的，还需要采取其它的防御措施。</p>]]></description>
</item>
</channel>
</rss>
