<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Nvm - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/nvm/</link>
        <description>Nvm - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Wed, 12 May 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/nvm/" rel="self" type="application/rss+xml" /><item>
    <title>There is an issue with node-fibers</title>
    <link>https://www.ithome.me/post/2021/05/12/m1%E6%97%A0%E6%B3%95%E7%BC%96%E8%AF%91taro%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
    <pubDate>Wed, 12 May 2021 00:00:00 &#43;0000</pubDate>
    <author>Simon</author>
    <guid>https://www.ithome.me/post/2021/05/12/m1%E6%97%A0%E6%B3%95%E7%BC%96%E8%AF%91taro%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
    <description><![CDATA[<h3 id="macbook-m1和taro"><code>MacBook M1</code>和<code>taro</code></h3>
<p>在MacBook M1上运行<code>taro</code>项目<code>yarn dev:h5</code>的时候会报下面的错误：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## There is an issue with `node-fibers` ##
</span></span><span class="line"><span class="cl">`/node_modules/fibers/bin/darwin-arm64-88/fibers.node` is missing.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Try running this to fix the issue: .nvm/versions/node/v15.5.0/bin/node /node_modules/fibers/build
</span></span><span class="line"><span class="cl">Error: Cannot find module &#39;node_modules/fibers/bin/darwin-arm64-88/fibers&#39;
</span></span></code></pre></div><p>找了很久没找到解决方案，知道找个一个类似的问题：https://www.jianshu.com/p/145015d721a5</p>
<h3 id="解决办法">解决办法</h3>
<p>我的环境如下：
node： v15.14.0
taro-cli： v3.2.8</p>
<p>先看错误提示:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## There is an issue with `node-fibers` ##
</span></span><span class="line"><span class="cl">`/node_modules/fibers/bin/darwin-arm64-88/fibers.node` is missing.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Try running this to fix the issue: .nvm/versions/node/v15.14.0/bin/node /node_modules/fibers/build
</span></span><span class="line"><span class="cl">Error: Cannot find module &#39;node_modules/fibers/bin/darwin-arm64-88/fibers&#39;
</span></span></code></pre></div><p>执行<code>/Users/xxx/.nvm/versions/node/v15.14.0/bin/node /Users/xxx/xxx/node_modules/fibers/build</code>时找不到fibers的<code>darwin-arm64-88</code></p>
<ol>
<li>在项目目录下执行<code>find . -name fibers.node</code>，看看输出路径有没有<code>darwin-arm64-88</code>，如果没有，继续下面步骤2</li>
<li>在项目目录手动执行<code>/Users/xxx/.nvm/versions/node/v15.14.0/bin/node /Users/xxx/xxx/node_modules/fibers/build</code>，输出提示<code>node-gyp not found! Please ensure node-gyp is in your PATH--</code></li>
<li>执行<code>npm install -g node-gyp</code>安装<code>node-gyp</code></li>
<li>再次执行<code>/Users/xxx/.nvm/versions/node/v15.14.0/bin/node /Users/xxx/xxx/node_modules/fibers/build</code>，此时报错<code>binding.gyp not found</code></li>
<li>项目目录下执行<code>find . -name binding.gyp</code>，会发现<code>node_modules/fibers/binding.gyp</code>，项目中是存在这个文件的</li>
<li>项目录下下<code>cd node_modules/fibers</code>，然后再次执行<code>/Users/xxx/.nvm/versions/node/v15.14.0/bin/node /Users/xxx/xxx/node_modules/fibers/build</code>，不出意外的话此时应该编译通过了。</li>
<li>然后<code>cd ../..</code>，执行<code>yarn dev:h5</code>，成功启动。</li>
</ol>]]></description>
</item>
<item>
    <title>Mac上安装yarn和nvm</title>
    <link>https://www.ithome.me/post/2020/10/19/mac%E4%B8%8A%E5%AE%89%E8%A3%85yarn%E5%92%8Cnvm/</link>
    <pubDate>Mon, 19 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>Simon</author>
    <guid>https://www.ithome.me/post/2020/10/19/mac%E4%B8%8A%E5%AE%89%E8%A3%85yarn%E5%92%8Cnvm/</guid>
    <description><![CDATA[<p><code>Mac</code>上安装<code>yarn</code>最方便的方式就是命令行输入:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">brew install yarn
</span></span></code></pre></div><p>但是这样会把<code>node</code>也一并安装，作为开发者来说，保持多个<code>node</code>版本是必要的，所以我们一般都是通过<code>nvm</code>来管理<code>node</code>版本。</p>
<p><code>brew</code>也提供过<code>brew install yarn --without-node</code>命令，但是现在已经失效。不必再试。</p>
<p>输入<code>brew install</code>，根据提示我们发现目前可用的指令是<code>brew install yarn --ignore-dependencies</code></p>
<p>运行后会报错，提示你找不到<code>node</code>，那么我们是不是可以把<code>nvm</code>的<code>node</code> link 到<code>brew</code>去呢？</p>
<p>答案是可以的，步骤如下(<code>node</code>的版本号改为你实际使用的版本):</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">~ which node 
</span></span><span class="line"><span class="cl">/usr/local/opt/nvm/versions/node/v14.14.0/bin/node
</span></span><span class="line"><span class="cl">~ mkdir /usr/local/Cellar/node
</span></span><span class="line"><span class="cl">~ ln -s /usr/local/opt/nvm/versions/node/v14.14.0 /usr/local/Cellar/node
</span></span><span class="line"><span class="cl">~ brew link --overwrite node
</span></span><span class="line"><span class="cl">~ brew doctor
</span></span><span class="line"><span class="cl">~ brew install yarn --ignore-dependencies
</span></span></code></pre></div><p>安装这个顺序操作就OK了。</p>]]></description>
</item>
<item>
    <title>通过nvm安装Node.js后，zsh重启npm失效</title>
    <link>https://www.ithome.me/post/2015/07/28/%E9%80%9A%E8%BF%87nvm%E5%AE%89%E8%A3%85node-js%E5%90%8Ezsh%E9%87%8D%E5%90%AF%E5%A4%B1%E6%95%88/</link>
    <pubDate>Tue, 28 Jul 2015 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2015/07/28/%E9%80%9A%E8%BF%87nvm%E5%AE%89%E8%A3%85node-js%E5%90%8Ezsh%E9%87%8D%E5%90%AF%E5%A4%B1%E6%95%88/</guid>
    <description><![CDATA[<p><strong>这篇文章的前提是你的nvm命令是有效的</strong></p>
<p>遇到这个问题后，网上找了一堆答案，有说要导入nvm环境变量的，有的说要开启zsh插件等等，然而并不能解决我的问题。于是记录下，不保证作为看官的你一定有效，但是也许能帮到和我一样问题的人？</p>
<p>第一次安装过程各种OK，npm、node等等各种运行正常，但是发现关闭命令行重启打开后，npm、node什么的都不能找不到命令了。这个时候你可以重新通过nvm安装node，于是node命令又能愉快的使用了。
但是，这不是我们想要的。那么让我们来解决这个问题：</p>
<p>当重启后不能使用node时，先重新安装一次</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nvm install 0.10 //安装你自己需要的版本
</span></span></code></pre></div><p>这个时候node应该又能愉快的使用了，于是再次输入如下命令：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ nvm ls
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">node -&gt; stable <span class="o">(</span>-&gt; N/A<span class="o">)</span> <span class="o">(</span>default<span class="o">)</span>
</span></span><span class="line"><span class="cl">iojs -&gt; iojs- <span class="o">(</span>-&gt; N/A<span class="o">)</span> <span class="o">(</span>default<span class="o">)</span>
</span></span></code></pre></div><p>此时你看到的如果类似这种，说明我们遇到的问题可能是一样了
这是因为没有指定默认的node版本导致的,那么继续输入如下命令:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ node --version
</span></span><span class="line"><span class="cl">v0.10.40
</span></span></code></pre></div><p>获取到你的node版本号，接下来设置默认版本号：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ nvm use 0.10.40
</span></span><span class="line"><span class="cl">Now using node v0.10.40 <span class="o">(</span>npm v1.4.28<span class="o">)</span>
</span></span></code></pre></div><p>再次输入:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ nvm ls
</span></span><span class="line"><span class="cl">            N/A
</span></span><span class="line"><span class="cl">default -&gt; 0.10.40 <span class="o">(</span>-&gt; v0.10.40<span class="o">)</span>
</span></span><span class="line"><span class="cl">node -&gt; stable <span class="o">(</span>-&gt; N/A<span class="o">)</span> <span class="o">(</span>default<span class="o">)</span>
</span></span><span class="line"><span class="cl">iojs -&gt; iojs- <span class="o">(</span>-&gt; N/A<span class="o">)</span> <span class="o">(</span>default<span class="o">)</span>
</span></span></code></pre></div><p>如果没有 <code>default</code> 那行的话，请再次输入</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nvm <span class="nb">alias</span> default 0.10.40
</span></span></code></pre></div><p>这个时候多了一个default项目，说明默认版本号设置成功。好了，现在重启终端试试，node和npm是不是已经正常使用了。</p>
<p>{% ruby 完结撒花|喜大普奔 %}</p>
<p>（完）</p>]]></description>
</item>
</channel>
</rss>
