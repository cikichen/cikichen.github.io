<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>接口 - Tag - 编程心语</title>
        <link>https://www.ithome.me/tags/%E6%8E%A5%E5%8F%A3/</link>
        <description>接口 - Tag - 编程心语</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>©{year}, All Rights Reserved. Simon Chen</copyright><lastBuildDate>Wed, 17 Jul 2013 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.ithome.me/tags/%E6%8E%A5%E5%8F%A3/" rel="self" type="application/rss+xml" /><item>
    <title>[转]使用旧的API来实现接口</title>
    <link>https://www.ithome.me/post/2013/07/17/%E8%BD%AC%E4%BD%BF%E7%94%A8%E6%97%A7%E7%9A%84api%E6%9D%A5%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3/</link>
    <pubDate>Wed, 17 Jul 2013 00:00:00 &#43;0000</pubDate>
    <author>SimonChen</author>
    <guid>https://www.ithome.me/post/2013/07/17/%E8%BD%AC%E4%BD%BF%E7%94%A8%E6%97%A7%E7%9A%84api%E6%9D%A5%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3/</guid>
    <description><![CDATA[<h2 id="课程内容">课程内容</h2>
<ol>
<li>选择一种替代方案</li>
<li>使用旧的API实现Tabs</li>
</ol>
<h2 id="动手试试">动手试试</h2>
<p>下载示例代码
<a href="http://developer.android.com/shareables/training/TabCompat.zip" target="_blank" rel="noopener noreffer">TabCompat.zip</a>
</p>
<p>这节内容介绍如何在旧版本上模仿新版本的功能。</p>
<h2 id="选择一种替代方案">选择一种替代方案</h2>
<p>在旧版本中实现新的UI特性的最具挑战性的任务就是：选择一种旧版本支持的替代方案。有时候使用旧版本中的UI特性可以模仿新的UI特性。例如：</p>
<ul>
<li>Action bars 可以使用一个包含一些图片按钮的水平 <a href="http://developer.android.com/reference/android/widget/LinearLayout.html" target="_blank" rel="noopener noreffer">LinearLayout</a>
来实现。浮动菜单按钮可以通过Menu按钮来模拟。</li>
<li>Action bar tabs 同样可以使用包含按钮的水平LinearLayout实现，或者使用 <a href="http://developer.android.com/reference/android/widget/TabWidget.html" target="_blank" rel="noopener noreffer">TabWidget</a>
 UI控件。</li>
<li><a href="http://developer.android.com/reference/android/widget/NumberPicker.html" target="_blank" rel="noopener noreffer">NumberPicker</a>
 和 <a href="http://developer.android.com/reference/android/widget/Switch.html" target="_blank" rel="noopener noreffer">Switch</a>
控件可以分别由<a href="http://developer.android.com/reference/android/widget/Spinner.html" target="_blank" rel="noopener noreffer">Spinner</a>
 和 <a href="http://developer.android.com/reference/android/widget/ToggleButton.html" target="_blank" rel="noopener noreffer">ToggleButton</a>
控件来替代。</li>
<li><a href="http://developer.android.com/reference/android/widget/ListPopupWindow.html" target="_blank" rel="noopener noreffer">ListPopupWindow</a>
 和 <a href="http://developer.android.com/reference/android/widget/PopupMenu.html" target="_blank" rel="noopener noreffer">PopupMenu</a>
 控件可以通过<a href="http://developer.android.com/reference/android/widget/PopupWindow.html" target="_blank" rel="noopener noreffer">PopupWindow</a>
 控件来模拟。
There generally isn’t a one-size-fits-all solution for backporting newer UI components to older devices. Be mindful of the user experience: on older devices, users may not be familiar with newer design patterns and UI components. Give some thought as to how the same functionality can be delivered using familiar elements. In many cases this is less of a concern—if newer UI components are prominent in the application ecosystem (such as the action bar), or where the interaction model is extremely simple and intuitive (such as swipe views using a <a href="http://blog.chengyunfeng.com/reference/android/support/v4/view/ViewPager.html" target="_blank" rel="noopener noreffer">ViewPager</a>
).</li>
</ul>
<h2 id="使用旧的api实现tabs">使用旧的API实现Tabs</h2>
<p>这里我们使用 <a href="http://developer.android.com/reference/android/widget/TabWidget.html" target="_blank" rel="noopener noreffer">TabWidget</a>
 和<a href="http://developer.android.com/reference/android/widget/TabHost.html" target="_blank" rel="noopener noreffer">TabHost</a>
来模拟抽象的API功能。
具体的实现类为 TabHelperEclair 和 CompatTabEclair，名字暗示了该实现只支持Android 2.0 (Eclair)以后的版本。</p>]]></description>
</item>
</channel>
</rss>
